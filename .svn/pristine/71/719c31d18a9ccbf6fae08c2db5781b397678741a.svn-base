/**
 * Created by fengxiaofei on 2015/12/4.
 */
'use strict'
var remoteUrl = 'http://192.168.100.150/';
require.config({

    baseUrl: "../shipping/",

    // alias libraries paths
    paths: {
        'jquery': remoteUrl + 'jquery/dist/jquery.min',
        'angular': remoteUrl + 'angular/angular',
        'uiRouter': remoteUrl + 'angular-ui-router/release/angular-ui-router',
        'angularAMD': remoteUrl + 'angularAMD/angularAMD',
        'ngload': remoteUrl + 'angularAMD/ngload',
        'blockUI': remoteUrl + 'angular-block-ui/dist/angular-block-ui.min',
        'bootstrap': remoteUrl + 'bootstrap/dist/js/bootstrap',
        'ngStrap': remoteUrl + 'angular-strap/dist/angular-strap',
        'agStraptpl': remoteUrl + 'angular-strap/dist/angular-strap.tpl',
        'angular-sanitize': remoteUrl + 'angular-sanitize/angular-sanitize',
        'ui-bootstrap': remoteUrl + 'ui-bootstrap/ui-bootstrap-tpls',
        'moment': remoteUrl + 'moment/moment',
        'locale': remoteUrl + 'moment/locale/zh-cn',
        'datetimepicker': remoteUrl + 'angular-bootstrap-datetimepicker/src/js/datetimepicker',

        'hls-core': '../common/js/hls/hls-core',
        'hls-util': '../common/js/hls/hls-util',
        'hls-ui': '../common/js/hls/hls-ui'
    },
    map: {
        '*': {
            'css': remoteUrl + 'require-css/css.js'
        }
    },
    // Add angular modules that does not support AMD out of the box, put it in a shim
    shim: {
        "angular": {exports: "angular"},
        'angularAMD': ['angular'],
        'uiRouter': ["angular"],
        'ngLoad': ["angularAMD"],
        'ui-bootstrap': ['angular'],
        'angular-sanitize': ['angular'],
        'agStraptpl': ['angular'],
        'ngStrap': ['agStraptpl', 'angular',
            'css!' + remoteUrl + 'bootstrap/dist/css/bootstrap.css',
            'css!' + remoteUrl + 'font-awesome/css/font-awesome.css'
        ],
        'blockUI': ['angular',
            'css!' + remoteUrl + 'angular-block-ui/dist/angular-block-ui.css'],
        'bootstrap': ['jquery',
            'css!' + remoteUrl + 'bootstrap/dist/css/bootstrap.css',
            'css!' + remoteUrl + 'bootstrap/dist/css/bootstrap-theme.css',
            'css!' + remoteUrl + 'font-awesome/css/font-awesome.css'],

        'datetimepicker': [
            'css!' + remoteUrl + 'angular-bootstrap-datetimepicker/src/css/datetimepicker.css'
        ],
        'hls-ui': ['hls-core',
            'css!../shipping/css/hls-ui.css'
        ],
        'hls-util': ['hls-ui']
    }
});

define(['angular', 'angularAMD', 'uiRouter', 'blockUI', 'bootstrap', 'ui-bootstrap', 'angular-sanitize', 'hls-util',
    'css!../shipping/css/index.css', 'css!../common/css/hls.css'], function (angular, angularAMD, blockUI) {
    // routes
    var registerRoutes = function ($stateProvider, $urlRouterProvider) {
        var jsResolve = {
            load: ['$q', '$rootScope', '$stateParams',
                function ($q, $rootScope, $stateParams) {

                    if ($stateParams.length == 0) {
                        return null;
                    }
                    var path = './views/' + $stateParams.module + "/" + $stateParams.action;
                    var deferred = $q.defer();
                    require([path], function () {
                        $rootScope.$apply(function () {
                            deferred.resolve();
                        });
                    });
                    return deferred.promise;
                }]
        };
        // default
        //$urlRouterProvider.otherwise("/tutorials/main");

        // route
        $stateProvider.state('module', {
            url: "/{module}/{action}?{params}",
            templateUrl: function ($scope) {
                return 'views/' + $scope.module + '/' + $scope.action + '.html';
            },
            resolve: jsResolve
        });
    };
    // module
    var app = angular.module("indexModule", ["ui.router", 'blockUI', 'ui.bootstrap', 'ngSanitize', 'hls.util']);

    // config
    app.config(["$stateProvider", "$urlRouterProvider", registerRoutes]);

    app.config(function ($httpProvider) {
        //$httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
        //$httpProvider.defaults.headers.common['Access-Control-Allow-Origin'] = '*';
    });

    app.config(function (blockUIConfig) {
        // Change the default overlay message
        blockUIConfig.message = "请稍候...";
        // Change the default delay to 100ms before the blocking is visible
        blockUIConfig.delay = 100;
        // Disable automatically blocking of the user interface
        blockUIConfig.autoBlock = false;
    });

    app.controller('indexCtrl', function () {
    })

// bootstrap
    return angularAMD.bootstrap(app);

})
;



